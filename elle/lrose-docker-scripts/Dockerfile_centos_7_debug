# docker-image-name: "nsflrose/lrose-elle"

# usage
#  RELEASE_DATE=lrose-elle-20200609

#==============================================================
# provision a Docker image for building lrose
# start with clean image
# install the required packages

FROM centos:7 as builder


ARG OS_TYPE=centos
ARG OS_VERSION=7
ARG LROSE_PKG=core
ARG RELEASE_DATE=latest

MAINTAINER UCAR "eol@ucar.edu"
LABEL vendor="Joint NCAR CSU"
LABEL release-date="2020-06-09"

COPY checkout_and_build_auto.py /tmp


# install required packages

RUN \
    yum install -y epel-release; \
    yum install -y \
    tcsh wget git \
    tkcvs emacs rsync python mlocate \
    m4 make cmake cmake3 libtool autoconf automake \
    gcc gcc-c++ gcc-gfortran glibc-devel \
    libX11-devel libXext-devel \
    libpng-devel libtiff-devel zlib-devel libzip-devel \
    GeographicLib-devel eigen3-devel armadillo-devel \
    expat-devel libcurl-devel openmpi-devel \
    flex-devel fftw3-devel \
    bzip2-devel qt5-qtbase-devel qt5-qtdeclarative-devel \
    hdf5-devel netcdf-devel \
    xorg-x11-xauth xorg-x11-apps \
    rpm-build redhat-rpm-config \
    rpm-devel rpmdevtools chrpath

# create environment variables  for qtmake

# RUN \
#     cd /usr/bin; \
#     ln -s qmake-qt5 qmake;


# hokey way of setting environment variables in Dockerfile; do not change!
ENV PKG_CONFIG_PATH /usr/lib64/pkgconfig

RUN pkg-config --variable=bindir Qt5 > /root/tmp_qt5_bindir
RUN PATH=$(cat /root/tmp_qt5_bindir):$PATH ; echo "PATH=" $PATH; \
  echo "  package is: ${LROSE_PKG}";  \
 /tmp/checkout_and_build_auto.py \
    --package lrose-${LROSE_PKG} \
    --releaseDate ${RELEASE_DATE} \
    --prefix /usr/local/lrose \
    --buildDir /tmp/lrose_build \
    --logDir /tmp/build_logs \
    --cmake3 --fractl --vortrac --samurai
 
# ------------  from ubuntu Dockerfile --------


#     cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr/local/lrose . && \
#     make install


# Set runpath

WORKDIR /usr/local/lrose/lib
RUN chrpath -k -r /usr/local/lrose/lib *.so || true

WORKDIR /usr/local/lrose/bin
RUN chrpath -k -r /usr/local/lrose/lib * || true

# Start from a fresh centos to not carry over all the build stuff

FROM centos:7

# Copy the lrose build

ADD VERSION .
COPY --from=builder /usr/local/lrose/ /usr/local/lrose/

WORKDIR /home/lrose

#
# resolve these using:
#  ldd <executable>
# where <executable> is RadxPrint, vortrac, samurai, fractl, etc.
#

RUN yum install -y epel-release; \
    yum install -y \
    qt5-qtbase qt5-qtdeclarative xorg-x11-xauth xorg-x11-apps \
    fftw3 \
    hdf5 netcdf \
    GeographicLib armadillo \
    freetype curl && \
    rm -rf /var/lib/apt/lists/* && \
    useradd -G video lrose

ENV LD_LIBRARY_PATH /usr/local/lrose/lib

ENV PATH /usr/local/lrose/bin:$PATH
